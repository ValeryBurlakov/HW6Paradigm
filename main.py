# Императивная парадигма - простая функция, выполняется по порядку изменяя значения переменных
# в соответствии с условиями и циклом

# Процедурное программирование - чтобы проще было понимать за что отвечает код, объявили процедуру

# Структурное программирование - код написан с использованием последовательных
# инструкций, условных операторов (if-elif-else) и цикла while,
# что позволяет легко понять последовательность операций

# Бинарный поиск является алгоритмом, использующим деление
# отрезка пополам для нахождения значения в массиве.
# Он работает только с отсортированным массивом и
# имеет логарифмическую сложность времени выполнения O(log n).

# без рекурсии, чтобы не было затрат по памяти, да и мне легче понять этот код
# довольно прямолинейная задача, без отклонений, в императивном стиле довольно просто
# читать и понимать что происходит, если бы была большая задача, то конечно декларативный стиль выбрал бы
def binary_search(arr, target):
    low = 0
    high = len(arr) - 1

    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            return mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1

    return -1


array_1 = [1, 3, 4, 6, 7, 8, 10, 13, 14]

print(binary_search(array_1, 13))
